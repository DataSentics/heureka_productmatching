version: "3"
services:
  candy:
    depends_on:
      - kafka-topics
    environment:
      CANDY_KAFKA_CHECK_TOPIC_EXISTENCE: 0
      CANDY_DISTANCE_THRESHOLD: 100
      CANDY_KAFKA_BOOTSTRAP_SERVERS: "kafka:29092"

  matching_rerun:
    depends_on:
      - kafka-topics
    environment:
      CANDY_KAFKA_BOOTSTRAP_SERVERS: "kafka:29092"

  tests:
    environment:
      CANDY_KAFKA_BOOTSTRAP_SERVERS: "kafka:29092"
    depends_on:
      - kafka

  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.0
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.3.0
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: "true"
      CONFLUENT_SUPPORT_CUSTOMER_ID: "anonymous"

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    environment:
      - KAFKA_BROKERCONNECT=kafka:29092
      - SERVER_SERVLET_CONTEXTPATH=/
      - JVM_OPTS=-Xms32M -Xmx64M
    ports:
      - 9000:9000
    depends_on:
      - kafka

  kafka-topics:
    image: confluentinc/cp-enterprise-kafka:5.3.0
    command: bash -c "sleep 15s && kafka-topics --create --if-not-exists --replication-factor 1 --partitions 2 --zookeeper zookeeper --topic matching-ng-candidate-embedding-cz && kafka-topics --create --if-not-exists --replication-factor 1 --partitions 2 --zookeeper zookeeper --topic matching-ng-item-matched-cz && kafka-topics --create --if-not-exists --replication-factor 1 --partitions 2 --zookeeper zookeeper --topic matching-ng-item-new-candidate-cz && kafka-topics --create --if-not-exists --replication-factor 1 --partitions 2 --zookeeper zookeeper --topic matching-ng-unknown-match-cz"
    depends_on:
      - kafka
